{"ast":null,"code":"// src/context.tsx\nimport React, { useEffect, useState, useContext, lazy, Suspense } from \"react\";\nimport { createClient, getDefaultClient } from \"@formspree/core\";\nimport { loadStripe } from \"@stripe/stripe-js/pure.js\";\nvar Elements = lazy(() => import(\"@stripe/react-stripe-js\").then(module => {\n  return {\n    default: module.Elements\n  };\n}));\nvar FormspreeContext = React.createContext({\n  client: void 0\n});\nFormspreeContext.displayName = \"Formspree\";\nvar stripePromise;\nvar getStripe = stripeKey => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(stripeKey);\n  }\n  return stripePromise;\n};\nvar handleCreateClient = (promise, project) => {\n  let config = {};\n  if (promise) {\n    config.stripePromise = promise;\n  }\n  if (project) {\n    config.project = project;\n  }\n  return createClient(config);\n};\nvar FormspreeProvider = props => {\n  const [stateStripePromise, setStateStripePromise] = useState(void 0);\n  const [client, setClient] = useState(handleCreateClient(stateStripePromise, props.project));\n  useEffect(() => {\n    client.startBrowserSession();\n    return () => {\n      client.teardown();\n    };\n  }, []);\n  useEffect(() => {\n    const getStripePromise = async () => {\n      const promiseStripe = await getStripe(props.stripePK);\n      setStateStripePromise(promiseStripe);\n    };\n    if (props.stripePK) {\n      getStripePromise();\n    }\n  }, [props.stripePK]);\n  useEffect(() => {\n    if (stateStripePromise) {\n      setClient(handleCreateClient(stateStripePromise, props.project));\n    }\n  }, [stateStripePromise]);\n  return /* @__PURE__ */React.createElement(FormspreeContext.Provider, {\n    value: {\n      client\n    }\n  }, props.stripePK ? /* @__PURE__ */React.createElement(React.Fragment, null, stateStripePromise && /* @__PURE__ */React.createElement(Suspense, {\n    fallback: /* @__PURE__ */React.createElement(\"p\", null, \"....\")\n  }, /* @__PURE__ */React.createElement(Elements, {\n    stripe: stateStripePromise\n  }, /* @__PURE__ */React.createElement(React.Fragment, null, props.children)))) : /* @__PURE__ */React.createElement(React.Fragment, null, props.children));\n};\nfunction useFormspree() {\n  const context = useContext(FormspreeContext);\n  return context.client ? context : {\n    client: getDefaultClient()\n  };\n}\n\n// src/useForm.ts\nimport { useState as useState2 } from \"react\";\nimport { useElements, CardElement, useStripe } from \"@stripe/react-stripe-js\";\n\n// package.json\nvar version = \"2.4.2\";\n\n// src/useForm.ts\nvar isEvent = data => {\n  return data.preventDefault !== void 0;\n};\nvar useForm = function (formKey) {\n  let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [result, setResult] = useState2(null);\n  const [submitting, setSubmitting] = useState2(false);\n  const [succeeded, setSucceeded] = useState2(false);\n  const [errors, setErrors] = useState2([]);\n  const formspreeContext = useFormspree();\n  const client = args.client || formspreeContext;\n  let stripe;\n  let elements;\n  if (!client) {\n    throw new Error(\"You must provide a Formspree client\");\n  }\n  if (!formKey) {\n    throw new Error('You must provide a form key or hashid (e.g. useForm(\"myForm\") or useForm(\"123xyz\")');\n  }\n  if (formspreeContext.client && formspreeContext.client.stripePromise) {\n    stripe = useStripe();\n    elements = useElements();\n  }\n  const debug = !!args.debug;\n  let extraData = args.data;\n  const reset = () => {\n    setSubmitting(false);\n    setSucceeded(false);\n    setErrors([]);\n  };\n  const handleSubmit = async submissionData => {\n    const getFormData = async event => {\n      event.preventDefault();\n      const form = event.target;\n      if (form.tagName != \"FORM\") {\n        throw new Error(\"submit was triggered for a non-form element\");\n      }\n      return new FormData(form);\n    };\n    let formData = isEvent(submissionData) ? await getFormData(submissionData) : submissionData;\n    const appendExtraData = (prop, value) => {\n      if (formData instanceof FormData) {\n        formData.append(prop, value);\n      } else {\n        formData = Object.assign(formData, {\n          [prop]: value\n        });\n      }\n    };\n    if (typeof extraData === \"object\") {\n      for (const prop in extraData) {\n        let extraDataValue;\n        if (typeof extraData[prop] === \"function\") {\n          extraDataValue = extraData[prop].call(null);\n          if (typeof extraDataValue?.then === \"function\") {\n            extraDataValue = await extraDataValue;\n          }\n        } else {\n          extraDataValue = extraData[prop];\n        }\n        if (extraDataValue !== void 0) {\n          appendExtraData(prop, extraDataValue);\n        }\n      }\n    }\n    const createPaymentMethod = async () => {\n      const address = {\n        ...(formData.address_line1 && {\n          line1: formData.address_line1\n        }),\n        ...(formData.address_line2 && {\n          line2: formData.address_line2\n        }),\n        ...(formData.address_city && {\n          city: formData.address_city\n        }),\n        ...(formData.address_country && {\n          country: formData.address_country\n        }),\n        ...(formData.address_state && {\n          state: formData.address_state\n        }),\n        ...(formData.address_postal_code && {\n          postal_code: formData.address_postal_code\n        })\n      };\n      const payload = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement),\n        billing_details: {\n          ...(formData.name && {\n            name: formData.name\n          }),\n          ...(formData.email && {\n            email: formData.email\n          }),\n          ...(formData.phone && {\n            phone: formData.phone\n          }),\n          ...(address && {\n            address\n          })\n        }\n      });\n      return payload;\n    };\n    setSubmitting(true);\n    return formspreeContext.client.submitForm(formKey, formData, {\n      endpoint: args.endpoint,\n      clientName: `@formspree/react@${version}`,\n      createPaymentMethod: formspreeContext.client && formspreeContext.client.stripePromise ? createPaymentMethod : void 0\n    }).then(result2 => {\n      let status = result2.response.status;\n      let body;\n      if (status === 200) {\n        if (debug) console.log(\"Form submitted\", result2);\n        setSucceeded(true);\n        setResult(result2);\n        setErrors([]);\n      } else if (status >= 400) {\n        body = result2.body;\n        if (body.errors) {\n          setErrors(body.errors);\n          if (debug) console.log(\"Error\", result2);\n        } else {\n          setErrors([{\n            message: \"Unexpected error\"\n          }]);\n          if (debug) console.log(\"Unexpected error\", result2);\n        }\n        setSucceeded(false);\n      }\n      return result2;\n    }).catch(error => {\n      if (debug) console.log(\"Unexpected error\", error);\n      setSucceeded(false);\n      throw error;\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  return [{\n    result,\n    submitting,\n    succeeded,\n    errors\n  }, handleSubmit, reset];\n};\n\n// src/ValidationError.tsx\nimport React3 from \"react\";\nvar ValidationError = props => {\n  const {\n    prefix,\n    field,\n    errors,\n    ...attrs\n  } = props;\n  const error = (errors || []).find(error2 => {\n    return error2.field === field;\n  });\n  if (!error) {\n    return null;\n  }\n  return /* @__PURE__ */React3.createElement(\"div\", {\n    ...attrs\n  }, prefix, \" \", error.message);\n};\n\n// src/types.ts\nimport { isFieldError } from \"@formspree/core\";\nexport { CardElement, FormspreeProvider, ValidationError, isFieldError, useForm, useFormspree };","map":{"version":3,"names":["React","useEffect","useState","useContext","lazy","Suspense","createClient","getDefaultClient","loadStripe","Elements","then","module","default","FormspreeContext","createContext","client","displayName","stripePromise","getStripe","stripeKey","handleCreateClient","promise","project","config","FormspreeProvider","props","stateStripePromise","setStateStripePromise","setClient","startBrowserSession","teardown","getStripePromise","promiseStripe","stripePK","createElement","Provider","value","Fragment","fallback","stripe","children","useFormspree","context","useState2","useElements","CardElement","useStripe","version","isEvent","data","preventDefault","useForm","formKey","args","arguments","length","undefined","result","setResult","submitting","setSubmitting","succeeded","setSucceeded","errors","setErrors","formspreeContext","elements","Error","debug","extraData","reset","handleSubmit","submissionData","getFormData","event","form","target","tagName","FormData","formData","appendExtraData","prop","append","Object","assign","extraDataValue","call","createPaymentMethod","address","address_line1","line1","address_line2","line2","address_city","city","address_country","country","address_state","state","address_postal_code","postal_code","payload","type","card","getElement","billing_details","name","email","phone","submitForm","endpoint","clientName","result2","status","response","body","console","log","message","catch","error","finally","React3","ValidationError","prefix","field","attrs","find","error2","isFieldError"],"sources":["/home/onur/Desktop/repo/metaportfolio/node_modules/@formspree/react/src/context.tsx","/home/onur/Desktop/repo/metaportfolio/node_modules/@formspree/react/src/useForm.ts","/home/onur/Desktop/repo/metaportfolio/node_modules/@formspree/react/package.json","/home/onur/Desktop/repo/metaportfolio/node_modules/@formspree/react/src/ValidationError.tsx","/home/onur/Desktop/repo/metaportfolio/node_modules/@formspree/react/src/types.ts"],"sourcesContent":["import React, { useEffect, useState, useContext, lazy, Suspense } from 'react';\nimport {\n  Client,\n  Config,\n  createClient,\n  getDefaultClient\n} from '@formspree/core';\nimport { loadStripe } from '@stripe/stripe-js/pure.js';\nimport { type Stripe } from '@stripe/stripe-js';\n\nconst Elements = lazy(() =>\n  import('@stripe/react-stripe-js').then(module => {\n    return { default: module.Elements };\n  })\n);\n\nexport type FromspreeContextType = {\n  client: Client;\n}\n\nexport type FormspreeProviderProps = {\n  project?: string;\n  children: React.ReactNode;\n  stripePK?: string;\n}\n\nconst FormspreeContext = React.createContext<FromspreeContextType>({\n  client: undefined\n});\n\nFormspreeContext.displayName = 'Formspree';\n\nlet stripePromise: Promise<Stripe>;\n\nconst getStripe = (stripeKey: string) => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(stripeKey);\n  }\n  return stripePromise;\n};\n\nconst handleCreateClient = (promise?: Stripe, project?: string) => {\n  let config: Config = {};\n\n  if (promise) {\n    config.stripePromise = promise;\n  }\n\n  if (project) {\n    config.project = project;\n  }\n\n  return createClient(config);\n};\n\nexport const FormspreeProvider = (props: FormspreeProviderProps) => {\n  const [stateStripePromise, setStateStripePromise] = useState<\n    Stripe | undefined\n  >(undefined);\n  const [client, setClient] = useState<Client>(\n    handleCreateClient(stateStripePromise, props.project)\n  );\n\n  useEffect(() => {\n    client.startBrowserSession();\n\n    return () => {\n      client.teardown();\n    };\n  }, []);\n\n  useEffect(() => {\n    const getStripePromise = async () => {\n      const promiseStripe = await getStripe(props.stripePK);\n      setStateStripePromise(promiseStripe);\n    };\n\n    if (props.stripePK) {\n      getStripePromise();\n    }\n  }, [props.stripePK]);\n\n  useEffect(() => {\n    if (stateStripePromise) {\n      setClient(handleCreateClient(stateStripePromise, props.project));\n    }\n  }, [stateStripePromise]);\n\n  return (\n    <FormspreeContext.Provider value={{ client }}>\n      {props.stripePK ? (\n        <>\n          {stateStripePromise && (\n            <Suspense fallback={<p>....</p>}>\n              <Elements stripe={stateStripePromise}>\n                <>{props.children}</>\n              </Elements>\n            </Suspense>\n          )}\n        </>\n      ) : (\n        <>{props.children}</>\n      )}\n    </FormspreeContext.Provider>\n  );\n};\n\nexport function useFormspree() {\n  const context = useContext(FormspreeContext);\n\n  return context.client\n    ? context\n    : {\n        client: getDefaultClient()\n      };\n}\n","import React, { useState } from 'react';\nimport { Stripe, StripeElements } from '@stripe/stripe-js';\nimport { useElements, CardElement, useStripe } from '@stripe/react-stripe-js';\nimport { useFormspree } from './context';\nimport { ExtraData, ExtraDataValue } from './types';\nimport { version } from '../package.json';\nimport {\n  Client,\n  SubmissionResponse,\n  SubmissionData,\n  ErrorBody,\n  FormError\n} from '@formspree/core';\n\ntype FormEvent = React.FormEvent<HTMLFormElement>;\n\ntype SubmitHandler = (\n  submissionData: FormEvent | SubmissionData\n) => Promise<SubmissionResponse>;\n\ntype ResetFunction = () => void;\n\nexport type TUseForm = [\n  {\n    result: SubmissionResponse | null;\n    submitting: boolean;\n    succeeded: boolean;\n    errors: FormError[];\n  },\n  SubmitHandler,\n  ResetFunction\n];\n\nconst isEvent = (data: FormEvent | SubmissionData): data is FormEvent => {\n  return (data as FormEvent).preventDefault !== undefined;\n};\n\nconst useForm = (\n  formKey: string,\n  args: {\n    client?: Client;\n    data?: ExtraData;\n    endpoint?: string;\n    debug?: boolean;\n  } = {}\n): TUseForm => {\n  const [result, setResult] = useState<SubmissionResponse | null>(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const formspreeContext = useFormspree();\n  const client = args.client || formspreeContext;\n  let stripe: Stripe;\n  let elements: StripeElements;\n\n  if (!client) {\n    throw new Error('You must provide a Formspree client');\n  }\n\n  if (!formKey) {\n    throw new Error(\n      'You must provide a form key or hashid ' +\n        '(e.g. useForm(\"myForm\") or useForm(\"123xyz\")'\n    );\n  }\n\n  if (formspreeContext.client && formspreeContext.client.stripePromise) {\n    stripe = useStripe();\n    elements = useElements();\n  }\n\n  const debug = !!args.debug;\n  let extraData = args.data;\n\n  const reset: ResetFunction = () => {\n    setSubmitting(false);\n    setSucceeded(false);\n    setErrors([]);\n  };\n\n  const handleSubmit: SubmitHandler = async submissionData => {\n    const getFormData = async (event: FormEvent) => {\n      event.preventDefault();\n\n      const form = event.target as HTMLFormElement;\n      if (form.tagName != 'FORM') {\n        throw new Error('submit was triggered for a non-form element');\n      }\n      return new FormData(form);\n    };\n\n    let formData = isEvent(submissionData)\n      ? await getFormData(submissionData)\n      : submissionData;\n\n    const appendExtraData = (prop: string, value: string) => {\n      if (formData instanceof FormData) {\n        formData.append(prop, value);\n      } else {\n        formData = Object.assign(formData, { [prop]: value });\n      }\n    };\n\n    // Append extra data from config\n    if (typeof extraData === 'object') {\n      for (const prop in extraData) {\n        let extraDataValue;\n        if (typeof extraData[prop] === 'function') {\n          extraDataValue = (extraData[prop] as Exclude<\n            ExtraDataValue,\n            string\n          >).call(null);\n          if (typeof extraDataValue?.then === 'function') {\n            extraDataValue = await extraDataValue;\n          }\n        } else {\n          extraDataValue = extraData[prop];\n        }\n        if (extraDataValue !== undefined) {\n          appendExtraData(prop, extraDataValue as string);\n        }\n      }\n    }\n\n    const createPaymentMethod = async () => {\n      const address = {\n        ...(formData.address_line1 && {\n          line1: formData.address_line1\n        }),\n        ...(formData.address_line2 && {\n          line2: formData.address_line2\n        }),\n        ...(formData.address_city && {\n          city: formData.address_city\n        }),\n        ...(formData.address_country && {\n          country: formData.address_country\n        }),\n        ...(formData.address_state && {\n          state: formData.address_state\n        }),\n        ...(formData.address_postal_code && {\n          postal_code: formData.address_postal_code\n        })\n      };\n\n      const payload = await stripe.createPaymentMethod({\n        type: 'card',\n        card: elements.getElement(CardElement),\n        billing_details: {\n          ...(formData.name && { name: formData.name }),\n          ...(formData.email && { email: formData.email }),\n          ...(formData.phone && { phone: formData.phone }),\n          ...(address && {\n            address\n          })\n        }\n      });\n\n      return payload;\n    };\n\n    setSubmitting(true);\n\n    return formspreeContext.client\n      .submitForm(formKey, formData, {\n        endpoint: args.endpoint,\n        clientName: `@formspree/react@${version}`,\n        createPaymentMethod:\n          formspreeContext.client && formspreeContext.client.stripePromise\n            ? createPaymentMethod\n            : undefined\n      })\n      .then((result: SubmissionResponse) => {\n        let status = result.response.status;\n        let body;\n\n        if (status === 200) {\n          if (debug) console.log('Form submitted', result);\n          setSucceeded(true);\n          setResult(result);\n          setErrors([]);\n        } else if (status >= 400) {\n          body = result.body as ErrorBody;\n          if (body.errors) {\n            setErrors(body.errors);\n            if (debug) console.log('Error', result);\n          } else {\n            setErrors([{ message: 'Unexpected error' }]);\n            if (debug) console.log('Unexpected error', result);\n          }\n          setSucceeded(false);\n        }\n        return result;\n      })\n      .catch((error: Error) => {\n        if (debug) console.log('Unexpected error', error);\n        setSucceeded(false);\n        throw error;\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return [{ result, submitting, succeeded, errors }, handleSubmit, reset];\n};\n\nexport { CardElement, useForm };\n","{\n  \"name\": \"@formspree/react\",\n  \"version\": \"2.4.2\",\n  \"description\": \"The React component library for Formspree\",\n  \"private\": false,\n  \"bugs\": {\n    \"url\": \"https://github.com/formspree/formspree-react/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/formspree/formspree-react.git\"\n  },\n  \"license\": \"MIT\",\n  \"contributors\": [\n    \"Derrick Reimer\",\n    \"Cole Krumbholz\",\n    \"Ismail Ghallou\"\n  ],\n  \"files\": [\n    \"dist/**\"\n  ],\n  \"sideEffects\": false,\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts --format esm,cjs --dts --external react --minify\",\n    \"dev\": \"tsup src/index.ts --format esm,cjs --dts --external react --sourcemap\",\n    \"clean\": \"rm -rf dist && rm -rf node_modules\",\n    \"lint\": \"eslint src/*.ts*\",\n    \"test\": \"jest\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {\n    \"*.{js,ts,tsx,css,json,md}\": [\n      \"npx prettier --write\",\n      \"git add\"\n    ],\n    \"package.json\": [\n      \"npx sort-package-json\",\n      \"git add\"\n    ]\n  },\n  \"dependencies\": {\n    \"@formspree/core\": \"^2.8.1\",\n    \"@stripe/react-stripe-js\": \"^1.7.1\",\n    \"@stripe/stripe-js\": \"^1.35.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.22.1\",\n    \"@swc/core\": \"^1.3.61\",\n    \"@testing-library/dom\": \"^9.3.0\",\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@testing-library/user-event\": \"^14.4.3\",\n    \"@types/jest\": \"^24.0.25\",\n    \"@types/react\": \"^18.0.15\",\n    \"@types/react-dom\": \"^18.0.6\",\n    \"babel-jest\": \"^26.3.0\",\n    \"husky\": \"^3.0.5\",\n    \"jest\": \"^26.4.2\",\n    \"lint-staged\": \"^9.2.5\",\n    \"np\": \"^6.4.0\",\n    \"prettier\": \"^1.18.2\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"sort-package-json\": \"^1.22.1\",\n    \"tsup\": \"^6.2.2\",\n    \"typescript\": \"^4.7.4\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^16.8 || ^17.0 || ^18.0\",\n    \"react-dom\": \"^16.8 || ^17.0 || ^18.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org/\"\n  },\n  \"np\": {\n    \"yarn\": false\n  }\n}\n","import React from 'react';\nimport { FormError } from '@formspree/core';\n\nexport type ValidationErrorProps = {\n  prefix?: string;\n  field?: string;\n  errors: FormError[];\n  [x: string]: any;\n}\n\nexport const ValidationError: React.FC<ValidationErrorProps> = props => {\n  const { prefix, field, errors, ...attrs } = props;\n\n  const error = (errors || []).find(error => {\n    return error.field === field;\n  });\n\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <div {...attrs}>\n      {prefix} {error.message}\n    </div>\n  );\n};\n","import * as Forms from '@formspree/core';\n\nexport { isFieldError } from '@formspree/core';\n\nexport type FormError = Forms.FormError;\nexport type FieldError = Forms.FieldError;\n\n/**\n * ExtraData values can be strings or functions that return a string, or a\n * promise that resolves to a string. Errors should be handled internally.\n * Functions can return undefined to skip this ExtraData value.\n */\nexport type ExtraDataValue =\n  | undefined\n  | string\n  | (() => string)\n  | (() => Promise<string>)\n  | (() => undefined)\n  | (() => Promise<undefined>);\n\nexport type ExtraData = {\n  [key: string]: ExtraDataValue;\n};\n\n// @deprecated\n// Will be removed in next major version\nexport type ErrorPayload = Forms.FormError;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}